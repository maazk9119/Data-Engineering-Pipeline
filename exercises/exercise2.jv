// Exercise # 2:
// Build an automated data pipeline for the following source:
//      https://www.govdata.de/web/guest/suchen/-/details/stadt-neuss-baumpflanzungen-2023//
// direct link to CSV: 
//      https://opendata.rhein-kreis-neuss.de/api/v2/catalog/datasets/stadt-neuss-herbstpflanzung-2023/exports/csv
//Do NOT use a local file, always take the data from the link above.
// Goal:
// Keep only valid data we are interested in.
// Define types of values and constraints for them.
// We are only interested in Vogelsang, valid stadtteil start with "Vogelsang".
// "id" contains geopoints with the following pattern:
//         {geo-coordinate 1}, {geo-coordinate 2}
//          a geo-coordinate is defined as {1-3 numbers}.{numbers}
// Drop "baumart_deutsch" column.
// Drop all rows with invalid values.
// Assign fitting built-in SQLite types (e.g., BIGINT, TEXT or FLOAT) to all columns.
// Write data into a SQLite database called “trees.sqlite”, in the table “trees”.

pipeline TreesPipeline {
    TreesExtractor
        ->TreesTextFileInterpreter
        ->TreesCSVInterpreter
        ->TreesColumnDeleter
        ->TreesTableInterpreter
        ->TreesLoader;

    block TreesExtractor oftype HttpExtractor{
        url: "https://opendata.rhein-kreis-neuss.de/api/v2/catalog/datasets/stadt-neuss-herbstpflanzung-2023/exports/csv";
    }

    block TreesTextFileInterpreter oftype TextFileInterpreter { }

    block TreesCSVInterpreter oftype CSVInterpreter {
        delimiter: ';';
    }

    block TreesColumnDeleter oftype ColumnDeleter {
        delete: [column E];
    }

    constraint stadtteilregex oftype RegexConstraint {

        regex: /^Vogelsang.*/;
    }

    valuetype stadt oftype text {
        constraints: [
            stadtteilregex,
        ];
    }

    constraint geocoordinateRegex oftype RegexConstraint {
        regex: /^\d{1,3}\.\d+,\s\d{1,3}\.\d+$/;
    }

    valuetype geocoordinate oftype text {
        constraints: [
            geocoordinateRegex,
        ];
    }

    block TreesTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "lfd_nr" oftype integer,
            "stadtteil" oftype stadt,
            "standort" oftype text,
            "baumart_botanisch" oftype text,
            "id" oftype geocoordinate,
            "baumfamilie" oftype text
        ];
    }

    block TreesLoader oftype SQLiteLoader {
        table: 'trees';
        file: './trees.sqlite';
    }
}